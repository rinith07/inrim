1. Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score


2. Load the advertising dataset
data = pd.read_csv('Ex2.csv')


3. Display the first few rows of the dataset
print(data.head())


4. Prepare the data
X = data[['TV', 'Radio', 'Newspaper']]
y = data['Sales']


5. Split the data into training and test sets (80% training, 20%
test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)



6. Create a linear regression model
model = LinearRegression()


7. Train the model using the training sets
model.fit(X_train, y_train)


8. Make predictions using the testing set
y_pred = model.predict(X_tesy)


9. Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f'Mean Squared Error: {mse}')
print(f'R^2 Score: {r2}')


10. Residual plot
residuals = y_test - y_pred
plt.figure(figsize=(8, 6))
plt.scatter(y_pred, residuals, color='blue')
plt.title('Residual Plot')
plt.xlabel('Predicted Values')
plt.ylabel('Residuals')
plt.axhline(y=0, color='r', linestyle='--')
plt.show()



11. Predicted vs Actual plot
plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, color='green')
plt.title('Predicted vs Actual')
plt.xlabel('Actual Values')
plt.ylabel('Predicted Values')
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linestyle='--')
plt.show()
