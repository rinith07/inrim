1. Import Library files
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score,
confusion_matrix



2. Load the dataset
data = pd.read_csv('customer_churn.csv')



3. Preprocess the data
X = data.drop(columns=['Churn']) # Features
y = data['Churn'].apply(lambda x: 1 if x == 'Yes' else 0) # Target (convert to
0 and 1)



4. Convert categorical features into dummy/indicator variables
X = pd.get_dummies(X, drop_first=True)



5. Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,
random_state=42)


6. Standardize the features
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)



7. Initialize the model
model = RandomForestClassifier(n_estimators=100, random_state=42)



8. Train the model
model.fit(X_train, y_train)


9. Predict on the test data
y_pred = model.predict(X_test)



10. Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
report = classification_report(y_test, y_pred)
print(f'Accuracy: {accuracy}')
print('Confusion Matrix:')
print(conf_matrix)
print('Classification Report:')
print(report)
