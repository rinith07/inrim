1. Import necessary libraries
import pandas as pd
from sklearn import tree
from sklearn.preprocessing import LabelEncoder
from sklearn.naive_bayes import GaussianNB


2. Load data from CSV
data = pd.read_csv('tennisdata.csv')
print("The first 5 values of data is :\n",data.head())


Output:
The first 5 values of data is :
Outlook Temperature Humidity Windy PlayTennis
0 Sunny Hot High False No
1 Sunny Hot High True No
2 Overcast Hot High False Yes
3 Rainy Mild High False Yes
4 Rainy Cool Normal False Yes


3. Obtain Train data and Train output
X = data.iloc[:,:-1]
print("\nThe First 5 values of train data is\n",X.head())


Output:
The First 5 values of train data is
Outlook Temperature Humidity Windy
0 Sunny Hot High False
1 Sunny Hot High True
2 Overcast Hot High False
3 Rainy Mild High False
4 Rainy Cool Normal False


y = data.iloc[:,-1]
print("\nThe first 5 values of Train output is\n",y.head())
Output:
The first 5 values of Train output is
0 No
1 No
2 Yes
3 Yes
4 Yes
Name: PlayTennis, dtype: object


Step 5 : Encode categorical data in `X`.
for column in X.columns:
 X[column]=LabelEncoder().fit_transform(X[column])
X.head()


Step 6 : Encode the target variable `y`.
y=LabelEncoder().fit_transform(y)
print(y)

Step 7 : Import `train_test_split`.
from sklearn.model_selection import train_test_split


Step 8 : Split data into training and testing sets.
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.20)

Step 9 : Train the `GaussianNB` classifier.
from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(X_train,y_train

Step 10 : Import `accuracy_score`.
from sklearn.metrics import accuracy_score

Step 11 : Calculate and print the accuracy of the model.
print("Accuracy is:",accuracy_score(classifier.predict(X_test),(y_test)))














