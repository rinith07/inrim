1.Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
import warnings
warnings.filterwarnings('ignore')



2.Load the Titanic data set
url = "Ex5.csv"
titanic_data = pd.read_csv(url)



3.Drop rows with missing target values
titanic_data = titanic_data.dropna(subset=['Survived'])


4.Select relevant features and target variable
X = titanic_data[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare']]
y = titanic_data['Survived']



5.Convert categorical variable 'Sex' to numerical using .loc
X.loc[:, 'Sex'] = X['Sex'].map({'female': 0, 'male': 1})


6.Handle missing values in the 'Age' column using .loc and fillna
X.loc[:, 'Age'] = X['Age'].fillna(X['Age'].median())



7.Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


8.Create a Random Forest Classifier
rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)


9.Train the classifier
rf_classifier.fit(X_train, y_train)


10.Make predictions on the test set
y_pred = rf_classifier.predict(X_test)


11.Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
classification_rep = classification_report(y_test, y_pred)


12.Print the results
print(f"Accuracy: {accuracy:.2f}")
print("\nClassification Report:\n", classification_rep)
